name: Deploy Mongo DB to ECS

on:
  push:
    branches:
      - dev
    paths:
      datastore/**

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Login to aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: us-east-1
          registry: 920990234657.dkr.ecr.us-east-1.amazonaws.com

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Image
        run: docker build -t 920990234657.dkr.ecr.us-east-1.amazonaws.com/mongodb ./datastore/
        
      - name: Push Image
        run:
          $(aws ecr get-login --no-include-email --region us-east-1)
          docker push 920990234657.dkr.ecr.us-east-1.amazonaws.com/mongodb

      - name: Force deployment
        run: |
          aws ecs update-service --cluster challenge_run_cluster --service mongo-api-service --force-new-deployment

      - name: Register private ip to target group
        run: |
          instance_id=$(aws ecs describe-tasks --cluster challenge_run_cluster --tasks $(aws ecs list-tasks --cluster challenge_run_cluster --service-name mongo-api-service --query "taskArns[0]" --output text) --query "tasks[0].containers[0].runtimeId" --output text | cut -d'/' -f 2)
          instance_private_ip=$(aws ec2 describe-instances --instance-ids $instance_id --query "Reservations[0].Instances[0].PrivateIpAddress" --output text)
          echo $instance_private_ip
          aws elbv2 register-targets --target-group-arn arn:aws:elasticloadbalancer:us-east-1:920990234657:targetgroup/challenge-run-target-group/f495050e0f505ce4 --targets Id=$instance_private_ip


